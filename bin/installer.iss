; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!


#define AppNameEXE "snixconnect.exe"
#define AppManager "snixluncher.exe"
#define AppService "service.exe"

[Setup]
AppName=SnixConnect VPN Client
AppVersion=0.10.2
DefaultDirName={autopf}\SnixConnect
DefaultGroupName=SnixConnect
UninstallDisplayIcon={app}\{#AppNameEXE}
WizardStyle=classic
DisableWelcomePage=no
SolidCompression=yes
OutputDir=output
OutputBaseFilename=snixconnect-setup-x86-64
ArchitecturesInstallIn64BitMode=x64compatible
AppMutex=SnixConnectProgramsMutex,Global\SnixConnectProgramsMutex
AllowCancelDuringInstall=no
AllowNoIcons=yes
AppComments=SnixConnect VPN Client For Windows
AppCopyright=Copyright Â© 2023-2024 SNIX LLC. All Rights Reserved.
AppPublisher=SnixConnect VPN, Inc.
AppPublisherURL=https://t.me/BitFreak
SetupIconFile=compiler:SetupClassicIcon.ico.
CloseApplications=no
LicenseFile=licence.txt
Compression=lzma2


[Files]
Source: "snixconnect-x64.exe"; MinVersion: 10.0; DestDir: "{app}"; DestName: {#AppNameEXE}; Check: Is64BitInstallMode; BeforeInstall: TaskKill('{#AppNameEXE}')
Source: "snixconnect-x86.exe"; MinVersion: 10.0; DestDir: "{app}"; DestName: {#AppNameEXE}; Check: not Is64BitInstallMode; Flags: solidbreak; BeforeInstall: TaskKill('{#AppNameEXE}')
Source: "snixmanager-x64.exe"; MinVersion: 10.0; DestDir: "{app}"; DestName: {#AppManager}; Check: Is64BitInstallMode; BeforeInstall: TaskKill('{#AppManager}')
Source: "snixmanager-x86.exe"; MinVersion: 10.0; DestDir: "{app}"; DestName: {#AppManager}; Check: not Is64BitInstallMode; Flags: solidbreak; BeforeInstall: TaskKill('{#AppManager}')
Source: "snixservice-x64.exe"; MinVersion: 10.0; DestDir: "{app}"; DestName: {#AppService}; Check: Is64BitInstallMode; BeforeInstall: UninstallService(); AfterInstall: InstallService()
Source: "snixservice-x86.exe"; MinVersion: 10.0; DestDir: "{app}"; DestName: {#AppService}; Check: not Is64BitInstallMode; Flags: solidbreak; BeforeInstall: UninstallService(); AfterInstall: InstallService()

Source: "snixconnect-old-x64.exe"; OnlyBelowVersion: 10.0; DestDir: "{app}"; DestName: {#AppNameEXE}; Check: Is64BitInstallMode; BeforeInstall: TaskKill('{#AppNameEXE}')
Source: "snixconnect-old-x86.exe"; OnlyBelowVersion: 10.0; DestDir: "{app}"; DestName: {#AppNameEXE}; Check: not Is64BitInstallMode; Flags: solidbreak; BeforeInstall: TaskKill('{#AppNameEXE}')
Source: "snixmanager-old-x64.exe"; OnlyBelowVersion: 10.0; DestDir: "{app}"; DestName: {#AppManager}; Check: Is64BitInstallMode; BeforeInstall: TaskKill('{#AppManager}')
Source: "snixmanager-old-x86.exe"; OnlyBelowVersion: 10.0; DestDir: "{app}"; DestName: {#AppManager}; Check: not Is64BitInstallMode; Flags: solidbreak; BeforeInstall: TaskKill('{#AppManager}')
Source: "snixservice-old-x64.exe"; OnlyBelowVersion: 10.0; DestDir: "{app}"; DestName: {#AppService}; Check: Is64BitInstallMode; BeforeInstall: UninstallService(); AfterInstall: InstallService()
Source: "snixservice-old-x86.exe"; OnlyBelowVersion: 10.0; DestDir: "{app}"; DestName: {#AppService}; Check: not Is64BitInstallMode; Flags: solidbreak; BeforeInstall: UninstallService(); AfterInstall: InstallService()



[Icons]
Name: "{group}\SnixConnect"; Filename: "{app}\{#AppManager}"; WorkingDir: "{app}"
Name: "{commondesktop}\SnixConnect"; Filename: "{app}\{#AppManager}"; WorkingDir: "{app}"


[RUN]
Filename: {app}\{#AppManager}; Description: Run SnixConnect VPN Client; Flags: postinstall nowait skipifsilent skipifdoesntexist

[UninstallDelete]
Type: filesandordirs; Name: "{localappdata}\SnixConnect";
Type: filesandordirs; Name: "{app}";



[UninstallRun]
Filename: "{sys}\taskkill.exe"; Parameters: "/f /im {#AppNameEXE}"; Flags: runhidden; RunOnceId: "StopApp"
Filename: "{app}\{#AppManager}"; Parameters: "--action uninstall"; Flags: runhidden; RunOnceId: "removeService"
Filename: "{sys}\taskkill.exe"; Parameters: "/f /im {#AppManager}"; Flags: runhidden; RunOnceId: "StopMGR"


[Code]
procedure TaskKill(FileName: String);
var
  ResultCode: Integer;
begin
   Exec(ExpandConstant('{sys}\taskkill.exe'), '/f /im ' + '"' + FileName + '"', ExpandConstant('{sys}'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
end;


procedure UninstallService();
var
  ResultCode: Integer;
begin
   Exec(ExpandConstant('{app}\{#AppManager}'), '--action uninstall', ExpandConstant('{app}'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
end;

procedure InstallService();
var
  ResultCode: Integer;
begin
   Exec(ExpandConstant('{app}\{#AppManager}'), '--action install ' + '--path ' + '"' + ExpandConstant('{app}\{#AppService}') + '" '  + '--snixpath '+ '"' + ExpandConstant('{app}\{#AppNameEXE}') + '"', ExpandConstant('{app}'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
end;
